apply plugin: rootProject.ext.plugins.library

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        //applicationId "com.hsj.base"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        vectorDrawables.useSupportLibrary = true

        ndk { abiFilters "armeabi-v7a", "x86" }

        testInstrumentationRunner rootProject.ext.dependencies.testInstrumentationRunner
    }

    buildTypes {
        release {
            buildConfigField "boolean", "isDebug", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "isDebug", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation rootProject.ext.dependencies.testJunit
    androidTestImplementation rootProject.ext.dependencies.testRunner
    androidTestImplementation rootProject.ext.dependencies.testEspresso

    implementation rootProject.ext.dependencies.multidex
    implementation rootProject.ext.dependencies.annotations
    implementation rootProject.ext.dependencies.constraint_layout
    implementation rootProject.ext.dependencies.support_v4
    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.recyclerview_v7
    implementation rootProject.ext.dependencies.design

    debugImplementation rootProject.ext.dependencies.leakcanary_debug
    releaseImplementation rootProject.ext.dependencies.leakcanary_release

}
